name: Build macOS App via CI

on:
  workflow_dispatch: # tu peux lancer manuellement
  push:
    branches: [ main ]

jobs:
  build-macos:
    runs-on: macos-latest

    steps:
      # 1️⃣ Checkout du repo
      - uses: actions/checkout@v3

      # 2️⃣ Trouver le fichier .yyp GameMaker
      - id: find_yyp
        name: Find GameMaker project
        run: |
          yyp_file=$(find ${{ github.workspace }} -name "*.yyp" | head -n 1)
          echo "yyp-path=$yyp_file" >> $GITHUB_OUTPUT

      # 3️⃣ Installer Igor pour compiler le projet depuis le .yyp
      - name: Setup Igor
        uses: bscotch/igor-setup@v1
        with:
          target-yyp: ${{ steps.find_yyp.outputs.yyp-path }}
          access-key: ${{ secrets.IGOR_ACCESS_KEY }}

      # 4️⃣ Build avec Igor → produit le .zip Xcode
      - name: Build with Igor
        uses: bscotch/igor-build@v1
        with:
          yyp-path: ${{ steps.find_yyp.outputs.yyp-path }}
          user-dir: ${{ steps.igor.outputs.user-dir }}

      # 5️⃣ Décompresse le projet Xcode
      - name: Unzip Xcode project
        run: unzip ${{ steps.build.outputs.out-dir }}/Mac.zip -d mac_export

      # 6️⃣ Compiler .app non signé
      - name: Build .app (no code signing)
        run: |
          cd mac_export
          xcodebuild \
            -project *.xcodeproj \
            -configuration Release \
            CODE_SIGN_IDENTITY="" \
            CODE_SIGNING_REQUIRED=NO \
            CODE_SIGNING_ALLOWED=NO

      # 7️⃣ Collecter le .app pour le télécharger depuis Actions
      - name: Upload artifact
        uses: actions/upload-artifact@v3
        with:
          name: MonJeu-macOS
          path: mac_export/build/Release/*.app
